@startuml

package com.gensee{
class RtSimpleImpl{
~abstract void onVideoStart();
~abstract void onVideoEnd();
-void onJoin(boolean b);
-Context onGetContext();
}
interface IRoomCallBack{
 ~直播间响应回调
 #onInit()
 #onJoin();
 #onRoomJoin();
 #onRoomLeave();
 #onRoomReconnecting();
 (26...)
}
interface IVideoCallBack{
~视频回调
~视频相关状态回调
~用户视频数据接收
#onVideoJoinConfirm()
#onVideoJoin()
#onVideoDisplay()
#onVideoDataRender()
(10...)
}
interface ILodCallBack{
~插播（媒体共享）回调
#onLodFailed() 播放失败
#onLodStart() 播放开始
onLodSkip() 插播进度变化
(8...)
}
interface IAudioCallBack{
~音频回调
#onAudioJoinConfirm()
#onAudioMicAvailable()
(...)
}

interface OnDocViewEventListener {
    #boolean onDoubleClicked();
    #boolean onSingleClicked();
    #boolean onEndHDirection();
}
interface ErrCode{
    #void onErr();
}
interface RtComp_Callback{
    ~初始化响应回调
    #void onInited();
}
interface OnTaskRet {
    ~辅助接口
    ~每一次调用结果通知
    -int OK = 1;
    -int ERR = 2;
    #void onTaskRet();
}

interface IAsCallBack {
    ~桌面共享回调
    ~通知共享状态及其数据
    #void onAsJoinConfirm();加载通知
    #void onAsBegin();开启通知
    #void onAsEnd();结束通知
    #void onAsData();数据流通知
}

interface IChatCallBack {
    ~接收聊天消息
    #void onChatJoinConfirm();
    #void onChatWithPersion();
    #void onChatWithPublic();
    #void onChatToPersion();
    #void onChatEnable();
}

}

package com.sunland.app.ui.video{
interface VideoActivityInterface {
    +void setOrientation(int orientation);
    +void setPlayOp(int imgID);
    +void shutDanmaku();
    +void showDanmaku();
    +boolean getIsSubViewShow();
    +void changeSubViewBig();
    +void changeSubViewSmall();
    +void switchMainSub();
    +void switchMainFloat();
    +void finishActivity();
    +boolean isPlaying();
    +void pauseVideo();
    +void startVideo();
    +void seekTo(int progress);
}
class GenseeOnliveVideoActivity{
    -GenseeOnliveSdkPresenter sdkPresenter;
    -VideoControlPresenter controlPresenter;
    +initViews();
    +initData();
    +initFragment()
}

class GenseeOnliveSdkPresenter{
#GenseeOnliveVideoActivity act;
}

class GenseeOnliveVideoChatPresenter{
#GenseeOnliveVideoActivity act;
+String initDataText(String content);
+String replaceData(String data)
}

class VideoControlPresenter{
#GenseeOnliveVideoActivity act;
}

interface VideoFloatFragment_CallBack {
        +void finish();
        +void playOrPause();
        +void fullScreen();
        +void smallScreen();
        +int getWholeDuration();
        +void seekVideo(int progress);
        +boolean isPlaying();
        +void shutDanmaku();
        +void showDanmaku();
        +void changeSubSmall();
        +void changeSubBig();
        +void switchMainSub();
    }

}
GenseeOnliveVideoActivity .up.|> VideoActivityInterface
GenseeOnliveVideoActivity -down->GenseeOnliveSdkPresenter
GenseeOnliveVideoActivity -right->VideoControlPresenter
GenseeOnliveVideoActivity-left->GenseeOnliveVideoChatPresenter

GenseeOnliveSdkPresenter-->GenseeOnliveVideoActivity
GenseeOnliveVideoChatPresenter-->GenseeOnliveVideoActivity
VideoControlPresenter-->GenseeOnliveVideoActivity

VideoControlPresenter .up.|> VideoFloatFragment_CallBack

RtSimpleImpl ..|> IRoomCallBack
RtSimpleImpl ..|> IVideoCallBack
RtSimpleImpl ..|> ILodCallBack
RtSimpleImpl ..|> IAsCallBack
RtSimpleImpl ..|> IAudioCallBack

RtComp_Callback --|> ErrCode
GenseeOnliveSdkPresenter --|> RtSimpleImpl
GenseeOnliveSdkPresenter ..|> IAsCallBack
GenseeOnliveSdkPresenter ..|> OnDocViewEventListener
GenseeOnliveSdkPresenter ..|> RtComp_Callback
GenseeOnliveSdkPresenter ..|> OnTaskRet

GenseeOnliveVideoChatPresenter..|>IChatCallBack



@enduml