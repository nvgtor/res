@startuml
start
:initViews()
initData()
initFragment();
:changeUI(status);
:registerReceiver();
:loadVideo();
if(classNumber.equals("")) then(false)
    :sdkPresenter.initRtSDK();
    :setVideoView(videoView)
    setDocView(docView)
    initComp(classNumber,isTraining);
    :new InitParam() p
    直播参数初始化;
    :new RtComp(act, this)
    comp.initWithGensee(p);
    if(回调RtComp.Callback) then(成功)
        :onInited(String rtParam);
        :joinWithParam("",rtParam)
        直播间初始化
        mRtSdk.initWithParam(logFileName,joinParam,roomCallBack);
        :IRoomCallBack.onInit(boolean result)
        直播（课堂）初始化;
        if(result==true)then(true)
        :rtSdk.setDocView(act.getDocView())
        rtSdk.setVideoCallBack(this)
        rtSdk.setAudioCallback(this)
        rtSdk.setLodCallBack(this)
        rtSdk.setChatCallback(act.initChatCallBack())
        rtSdk.setAsCallBack(this)
        rtSdk.qaHistoryOff(true);
        :rtSdk.join(new OnTaskRet())
        加入直播（课堂）;
        if(加入回调)then(加入)
        :按钮变为暂停样式
        isPlaying = true;
        :IRoomCallBack.
        onRoomJoin(result,self,svrFailover)
        直播间加入响应;
        if(result==0)then(加入成功)
            :改变UI;
            :getJoinRecoud(teachUnitId,1);
            :act.changeIsOrNoOnLiveStatus();
            if(act.courseStatus!=1)then(不在直播)
                :act.showQuizzes()
                展示随堂考;
            else(正在直播)
            endif
        else(加入失败)
            :release();
            :rtSdk.release(new OnTaskRet())
            释放房间实例，onTask响应之后才能重新加入;
            :act.finish();
        endif
        else(加入失败)
        :加入失败提示;
        endif
        else(false)
        endif
    else(失败)
        :onErr(int errCode);
    endif
else(true)
    :return;
endif
:init VideoFloatFragment;
:init tab Fragment && ViewPager;


stop
@enduml